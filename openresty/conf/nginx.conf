# OpenResty配置 - MC智能监控系统
worker_processes auto;
error_log /var/log/openresty/error.log warn;
pid /usr/local/openresty/nginx/logs/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
                   
    access_log /var/log/openresty/access.log main;
    
    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    types_hash_bucket_size 128;
    
    # Lua设置
    lua_package_path "/opt/openresty/lua/?.lua;;";
    lua_shared_dict mc_nodes 10m;        # 存储MC节点信息
    lua_shared_dict mc_config 1m;        # 存储配置信息
    lua_shared_dict mc_stats 5m;         # 存储统计信息
    
    # 初始化脚本
    init_by_lua_file /opt/openresty/lua/init.lua;
    init_worker_by_lua_file /opt/openresty/lua/worker.lua;
    
    # 上游服务器组
    upstream mcsm_web {
        server 127.0.0.1:${var.mcsmanager.web_port};
    }
    
    upstream mcsm_daemon_local {
        server 127.0.0.1:${var.mcsmanager.daemon_port};
    }
    
    # MCSManager Web管理界面
    server {
        listen 80 default_server;
        server_name _;
        access_log /var/log/openresty/mcsm-web-access.log main;
        error_log /var/log/openresty/mcsm-web-error.log;
        
        location / {
            proxy_pass http://mcsm_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            client_max_body_size 0;
            proxy_request_buffering off;
            proxy_buffering off;
        }
    }
    
    # 本地 MCSM Daemon 代理（用于调试）
    server {
        listen 8080;
        server_name daemon.mcsmanager.local;
        access_log /var/log/openresty/mcsm-daemon-access.log main;
        error_log /var/log/openresty/mcsm-daemon-error.log;
        
        location / {
            proxy_pass http://mcsm_daemon_local;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            client_max_body_size 0;
            proxy_request_buffering off;
            proxy_buffering off;
        }
    }
    
    # 包含动态生成的MCSM Daemon代理端口配置
    include daemon_proxy_ports.conf;
    
    # MC监控系统API和配置界面
    server {
        listen 9000;
        server_name _;
        access_log /var/log/openresty/config-web-access.log main;
        error_log /var/log/openresty/config-web-error.log;
        
        # 配置界面
        location / {
            root /opt/openresty/html;
            index config.html;
            try_files $uri $uri/ /config.html;
        }
        
        # API Key配置
        location /api/config {
            content_by_lua_file /opt/openresty/lua/config_api.lua;
        }
        
        # 获取系统状态
        location /api/status {
            content_by_lua_file /opt/openresty/lua/status_api.lua;
        }
        
        # 手动触发节点扫描
        location /api/scan {
            content_by_lua_file /opt/openresty/lua/scan_api.lua;
        }
        
        # 动态生成MC代理配置（管理接口）
        location /api/proxy-config {
            content_by_lua_file /opt/openresty/lua/proxy_config_api.lua;
        }
        
        # 静态资源
        location /static/ {
            root /opt/openresty/html;
            expires 7d;
        }
    }
    
    # 健康检查
    server {
        listen 8888;
        server_name _;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# Stream模块 - MC服务器代理（动态生成）
stream {
    # Lua设置
    lua_package_path "/opt/openresty/lua/?.lua;;";
    lua_shared_dict mc_stream_nodes 5m;
    
    # 日志格式
    log_format stream_main '$remote_addr [$time_local] $protocol $bytes_sent $bytes_received $session_time';
    access_log /var/log/openresty/stream-access.log stream_main;
    error_log /var/log/openresty/stream-error.log;
    
    # 动态变量定义
    map $remote_addr $backend {
        default "127.0.0.1:25565";
    }
    
    # 默认MC端口代理（25565）
    server {
        listen 25565;
        proxy_timeout 30s;
        proxy_responses 1;
        error_log /var/log/openresty/mc-proxy-error.log;
        
        # 使用Lua脚本动态选择后端
        preread_by_lua_block {
            local nodes_dict = ngx.shared.mc_nodes
            if not nodes_dict then
                ngx.log(ngx.ERR, "无法访问节点共享字典")
                ngx.var.backend = "127.0.0.1:25565"
                return
            end
            
            -- 获取节点列表
            local node_list_str = nodes_dict:get("node_list")
            if not node_list_str then
                ngx.log(ngx.WARN, "没有找到可用的MC节点")
                ngx.var.backend = "127.0.0.1:25565"
                return
            end
            
            local cjson = require "cjson"
            local node_list = cjson.decode(node_list_str)
            
            -- 简单的轮询选择第一个可用节点
            if node_list and #node_list > 0 then
                local first_node_key = "node:" .. node_list[1]
                local node_str = nodes_dict:get(first_node_key)
                if node_str then
                    local node = cjson.decode(node_str)
                    if node and node.private_ip then
                        ngx.var.backend = node.private_ip .. ":25565"
                        ngx.log(ngx.INFO, "路由MC连接到: " .. ngx.var.backend)
                    end
                end
            end
        }
        
        proxy_pass $backend;
    }
    
    # 其他MC端口可以通过API动态配置
    # 这里预留25566-25570端口
    server {
        listen 25566;
        proxy_timeout 30s;
        proxy_responses 1;
        preread_by_lua_file /opt/openresty/lua/mc_stream_proxy.lua;
        proxy_pass $backend;
    }
    
    server {
        listen 25567;
        proxy_timeout 30s;
        proxy_responses 1;
        preread_by_lua_file /opt/openresty/lua/mc_stream_proxy.lua;
        proxy_pass $backend;
    }
    
    server {
        listen 25568;
        proxy_timeout 30s;
        proxy_responses 1;
        preread_by_lua_file /opt/openresty/lua/mc_stream_proxy.lua;
        proxy_pass $backend;
    }
}